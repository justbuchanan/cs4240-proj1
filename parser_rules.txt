<EXPR_OR_ID> --> ID <EXPR_OR_FUNC>
<EXPR_OR_ID> --> <EXPR_NO_LVALUE>

<RET_TYPE> --> NULL
<RET_TYPE> --> COLON <TYPE_ID>

<MULT_DIV_EXPR_TAIL> --> MULT <NEGATED_EXPR> <MULT_DIV_EXPR_TAIL>
<MULT_DIV_EXPR_TAIL> --> NULL

<EXPR_OR_FUNC> --> <LVALUE_TAIL> <EXPR_ANY_TAIL>
<EXPR_OR_FUNC> --> LPAREN <EXPR_LIST> RPAREN

<LVALUE> --> ID <LVALUE_TAIL>

<EXPR_LIST_TAIL> --> COMMA <EXPR> <EXPR_LIST_TAIL>
<EXPR_LIST_TAIL> --> NULL

<PARAM_LIST_TAIL> --> NULL
<PARAM_LIST_TAIL> --> COMMA <PARAM> <PARAM_LIST_TAIL>

<ADD_SUB_EXPR> --> <MULT_DIV_EXPR> <ADD_SUB_EXPR_TAIL>

<AND_EXPR_TAIL> --> AND <BOOL_EXPR> <AND_EXPR_TAIL>
<AND_EXPR_TAIL> --> NULL

<ADD_SUB_EXPR_TAIL> --> PLUS <MULT_DIV_EXPR> <ADD_SUB_EXPR_TAIL>
<ADD_SUB_EXPR_TAIL> --> NULL

<TYPE> --> ARRAY LBRACK INTLIT RBRACK <TYPEDIM> OF <TYPE_ID> SEMI

<STAT_AFTER_ID> --> LPAREN <EXPR_LIST> RPAREN SEMI
<STAT_AFTER_ID> --> <LVALUE_TAIL> ASSIGN <EXPR_OR_ID> SEMI

<FUNCT_DECLARATION_LIST> --> NULL
<FUNCT_DECLARATION_LIST> --> <FUNCT_DECLARATION> <FUNCT_DECLARATION_LIST>

<EXPR_NO_LVALUE> --> <CONST> <EXPR_ANY_TAIL>
<EXPR_NO_LVALUE> --> MINUS <ATOM_EXPR>
<EXPR_NO_LVALUE> --> LPAREN <EXPR> RPAREN <EXPR_ANY_TAIL>

<EXPR_LIST> --> NULL
<EXPR_LIST> --> <EXPR> <EXPR_LIST_TAIL>

<PARAM> --> ID COLON <TYPE_ID>

<STAT_IF_CLAUSE_2> --> ENDIF SEMI
<STAT_IF_CLAUSE_2> --> ELSE <STAT_SEQ> ENDIF SEMI

<ID_LIST> --> ID <ID_LIST_PRIME>

<OPTIONAL_INIT> --> NULL
<OPTIONAL_INIT> --> ASSIGN <CONST>

<BOOL_EXPR_TAIL> --> <BOOL_OP> <ADD_SUB_EXPR> <BOOL_EXPR_TAIL>
<BOOL_EXPR_TAIL> --> NULL

<TIGER_PROGRAM> --> LET <DECLARATION_SEGMENT> IN <STAT_SEQ> END

<STAT> --> WHILE <EXPR> DO <STAT_SEQ> ENDDO SEMI
<STAT> --> FOR ID ASSIGN <EXPR> TO <EXPR> DO <STAT_SEQ> ENDDO SEMI
<STAT> --> BREAK SEMI
<STAT> --> RETURN <EXPR> SEMI
<STAT> --> ID <STAT_AFTER_ID>

<ATOM_EXPR> --> <LVALUE>

<TYPE_DECLARATION_LIST> --> NULL
<TYPE_DECLARATION_LIST> --> <TYPE_DECLARATION> <TYPE_DECLARATION_LIST>

<EXPR_ANY_TAIL> --> <MULT_DIV_EXPR_TAIL>
<EXPR_ANY_TAIL> --> <ADD_SUB_EXPR_TAIL>
<EXPR_ANY_TAIL> --> <AND_EXPR_TAIL>
<EXPR_ANY_TAIL> --> <BOOL_EXPR_TAIL>
<EXPR_ANY_TAIL> --> NULL

<TYPE_DECLARATION> --> TYPE ID EQ <TYPE>

<VAR_DECLARATION> --> VAR <ID_LIST> COLON <TYPE_ID> <OPTIONAL_INIT> SEMI

<TYPEDIM> --> LBRACK INTLIT RBRACK <TYPEDIM>
<TYPEDIM> --> NULL

<STAT_SEQ_PRIME> --> <STAT> <STAT_SEQ_PRIME>
<STAT_SEQ_PRIME> --> NULL

<BOOL_OP> --> EQ
<BOOL_OP> --> NEQ
<BOOL_OP> --> GREATER
<BOOL_OP> --> LESSER
<BOOL_OP> --> GREATEREQ
<BOOL_OP> --> LESSEREQ

<NEGATED_EXPR> --> MINUS <ATOM_EXPR>
<NEGATED_EXPR> --> <ATOM_EXPR>

<VAR_DECLARATION_LIST> --> NULL
<VAR_DECLARATION_LIST> --> <VAR_DECLARATION> <VAR_DECLARATION_LIST>

<CONST> --> INTLIT
<CONST> --> STRLIT
<CONST> --> NIL

<AND_EXPR> --> <BOOL_EXPR> <AND_EXPR_TAIL>

<EXPR> --> <ATOM_EXPR>
<EXPR> --> <EXPR_NO_LVALUE>

<FUNCT_DECLARATION> --> FUNC ID LPAREN <PARAM_LIST> RPAREN <RET_TYPE> BEGIN <STAT_SEQ> END SEMI

<STAT_SEQ> --> <STAT> <STAT_SEQ_PRIME>

<MULT_DIV_EXPR> --> <NEGATED_EXPR> <MULT_DIV_EXPR_TAIL>

<PARAM_LIST> --> NULL
<PARAM_LIST> --> <PARAM> <PARAM_LIST_TAIL>

<LVALUE_TAIL> --> LBRACK <EXPR> RBRACK <LVALUE_TAIL>
<LVALUE_TAIL> --> NULL

<ID_LIST_PRIME> --> NULL
<ID_LIST_PRIME> --> COMMA <ID_LIST>

<TYPE_ID> --> INTLIT
<TYPE_ID> --> STRLIT
<TYPE_ID> --> ID

<STAT_IF> --> IF <EXPR> THEN <STAT_SEQ> <STAT_IF_CLAUSE_2>

<DECLARATION_SEGMENT> --> <TYPE_DECLARATION_LIST> <VAR_DECLARATION_LIST> <FUNCT_DECLARATION_LIST>

<BOOL_EXPR> --> <ADD_SUB_EXPR> <BOOL_EXPR_TAIL>

