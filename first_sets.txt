FIRST(<EXPR_OR_FUNC> --> <LVALUE_TAIL> <EXPR_ANY_TAIL>) = [PLUS, AND, LESSER, GREATEREQ, LBRACK, MULT, EQ, GREATER, LESSEREQ, NEQ]
FIRST(<EXPR_OR_FUNC> --> LPAREN <EXPR_LIST> RPAREN) = [LPAREN]

FIRST(<PARAM> --> ID COLON <TYPE_ID>) = [ID]

FIRST(<ADD_SUB_EXPR> --> <MULT_DIV_EXPR> <ADD_SUB_EXPR_TAIL>) = [MINUS, ID]

FIRST(<STAT_IF> --> IF <EXPR> THEN <STAT_SEQ> <STAT_IF_CLAUSE_2>) = [IF]

FIRST(<LVALUE_TAIL> --> LBRACK <EXPR> RBRACK <LVALUE_TAIL>) = [LBRACK]
FIRST(<LVALUE_TAIL> --> NULL) = [NULL]

FIRST(<LVALUE> --> ID <LVALUE_TAIL>) = [ID]

FIRST(<RET_TYPE> --> NULL) = [NULL]
FIRST(<RET_TYPE> --> COLON <TYPE_ID>) = [COLON]

FIRST(<ADD_SUB_EXPR_TAIL> --> PLUS <MULT_DIV_EXPR> <ADD_SUB_EXPR_TAIL>) = [PLUS]
FIRST(<ADD_SUB_EXPR_TAIL> --> NULL) = [NULL]

FIRST(<BOOL_OP> --> EQ) = [EQ]
FIRST(<BOOL_OP> --> NEQ) = [NEQ]
FIRST(<BOOL_OP> --> GREATER) = [GREATER]
FIRST(<BOOL_OP> --> LESSER) = [LESSER]
FIRST(<BOOL_OP> --> GREATEREQ) = [GREATEREQ]
FIRST(<BOOL_OP> --> LESSEREQ) = [LESSEREQ]

FIRST(<BOOL_EXPR> --> <ADD_SUB_EXPR> <BOOL_EXPR_TAIL>) = [MINUS, ID]

FIRST(<TYPEDIM> --> LBRACK INTLIT RBRACK <TYPEDIM>) = [LBRACK]
FIRST(<TYPEDIM> --> NULL) = [NULL]

FIRST(<EXPR_OR_ID> --> ID <EXPR_OR_FUNC>) = [ID]
FIRST(<EXPR_OR_ID> --> <EXPR_NO_LVALUE>) = [LPAREN, INTLIT, STRLIT, MINUS, NIL]

FIRST(<TYPE_DECLARATION> --> TYPE ID EQ <TYPE>) = [TYPE]

FIRST(<EXPR_ANY_TAIL> --> <MULT_DIV_EXPR_TAIL>) = [MULT]
FIRST(<EXPR_ANY_TAIL> --> <ADD_SUB_EXPR_TAIL>) = [PLUS]
FIRST(<EXPR_ANY_TAIL> --> <AND_EXPR_TAIL>) = [AND]
FIRST(<EXPR_ANY_TAIL> --> <BOOL_EXPR_TAIL>) = [LESSER, GREATEREQ, EQ, GREATER, LESSEREQ, NEQ]
FIRST(<EXPR_ANY_TAIL> --> NULL) = [NULL]

FIRST(<EXPR_LIST_TAIL> --> COMMA <EXPR> <EXPR_LIST_TAIL>) = [COMMA]
FIRST(<EXPR_LIST_TAIL> --> NULL) = [NULL]

FIRST(<STAT_SEQ> --> <STAT> <STAT_SEQ_PRIME>) = [BREAK, FOR, WHILE, RETURN, ID]

FIRST(<EXPR> --> <ATOM_EXPR>) = [ID]
FIRST(<EXPR> --> <EXPR_NO_LVALUE>) = [LPAREN, INTLIT, STRLIT, MINUS, NIL]

FIRST(<ID_LIST_PRIME> --> NULL) = [NULL]
FIRST(<ID_LIST_PRIME> --> COMMA <ID_LIST>) = [COMMA]

FIRST(<TIGER_PROGRAM> --> LET <DECLARATION_SEGMENT> IN <STAT_SEQ> END) = [LET]

FIRST(<FUNCT_DECLARATION> --> FUNC ID LPAREN <PARAM_LIST> RPAREN <RET_TYPE> BEGIN <STAT_SEQ> END SEMI) = [FUNC]

FIRST(<AND_EXPR> --> <BOOL_EXPR> <AND_EXPR_TAIL>) = [MINUS, ID]

FIRST(<DECLARATION_SEGMENT> --> <TYPE_DECLARATION_LIST> <VAR_DECLARATION_LIST> <FUNCT_DECLARATION_LIST>) = [VAR, FUNC, TYPE]

FIRST(<STAT_AFTER_ID> --> LPAREN <EXPR_LIST> RPAREN SEMI) = [LPAREN]
FIRST(<STAT_AFTER_ID> --> <LVALUE_TAIL> ASSIGN <EXPR_OR_ID> SEMI) = [LBRACK, ASSIGN]

FIRST(<NEGATED_EXPR> --> MINUS <ATOM_EXPR>) = [MINUS]
FIRST(<NEGATED_EXPR> --> <ATOM_EXPR>) = [ID]

FIRST(<VAR_DECLARATION_LIST> --> NULL) = [NULL]
FIRST(<VAR_DECLARATION_LIST> --> <VAR_DECLARATION> <VAR_DECLARATION_LIST>) = [VAR]

FIRST(<ATOM_EXPR> --> <LVALUE>) = [ID]

FIRST(<TYPE> --> ARRAY LBRACK INTLIT RBRACK <TYPEDIM> OF <TYPE_ID> SEMI) = [ARRAY]

FIRST(<ID_LIST> --> ID <ID_LIST_PRIME>) = [ID]

FIRST(<TYPE_ID> --> INTLIT) = [INTLIT]
FIRST(<TYPE_ID> --> STRLIT) = [STRLIT]
FIRST(<TYPE_ID> --> ID) = [ID]

FIRST(<STAT> --> WHILE <EXPR> DO <STAT_SEQ> ENDDO SEMI) = [WHILE]
FIRST(<STAT> --> FOR ID ASSIGN <EXPR> TO <EXPR> DO <STAT_SEQ> ENDDO SEMI) = [FOR]
FIRST(<STAT> --> BREAK SEMI) = [BREAK]
FIRST(<STAT> --> RETURN <EXPR> SEMI) = [RETURN]
FIRST(<STAT> --> ID <STAT_AFTER_ID>) = [ID]

FIRST(<CONST> --> INTLIT) = [INTLIT]
FIRST(<CONST> --> STRLIT) = [STRLIT]
FIRST(<CONST> --> NIL) = [NIL]

FIRST(<MULT_DIV_EXPR> --> <NEGATED_EXPR> <MULT_DIV_EXPR_TAIL>) = [MINUS, ID]

FIRST(<FUNCT_DECLARATION_LIST> --> NULL) = [NULL]
FIRST(<FUNCT_DECLARATION_LIST> --> <FUNCT_DECLARATION> <FUNCT_DECLARATION_LIST>) = [FUNC]

FIRST(<EXPR_LIST> --> NULL) = [NULL]
FIRST(<EXPR_LIST> --> <EXPR> <EXPR_LIST_TAIL>) = [LPAREN, INTLIT, STRLIT, MINUS, ID, NIL]

FIRST(<AND_EXPR_TAIL> --> AND <BOOL_EXPR> <AND_EXPR_TAIL>) = [AND]
FIRST(<AND_EXPR_TAIL> --> NULL) = [NULL]

FIRST(<EXPR_NO_LVALUE> --> <CONST> <EXPR_ANY_TAIL>) = [INTLIT, STRLIT, NIL]
FIRST(<EXPR_NO_LVALUE> --> MINUS <ATOM_EXPR>) = [MINUS]
FIRST(<EXPR_NO_LVALUE> --> LPAREN <EXPR> RPAREN <EXPR_ANY_TAIL>) = [LPAREN]

FIRST(<PARAM_LIST> --> NULL) = [NULL]
FIRST(<PARAM_LIST> --> <PARAM> <PARAM_LIST_TAIL>) = [ID]

FIRST(<STAT_SEQ_PRIME> --> <STAT> <STAT_SEQ_PRIME>) = [BREAK, FOR, WHILE, RETURN, ID]
FIRST(<STAT_SEQ_PRIME> --> NULL) = [NULL]

FIRST(<MULT_DIV_EXPR_TAIL> --> MULT <NEGATED_EXPR> <MULT_DIV_EXPR_TAIL>) = [MULT]
FIRST(<MULT_DIV_EXPR_TAIL> --> NULL) = [NULL]

FIRST(<PARAM_LIST_TAIL> --> NULL) = [NULL]
FIRST(<PARAM_LIST_TAIL> --> COMMA <PARAM> <PARAM_LIST_TAIL>) = [COMMA]

FIRST(<VAR_DECLARATION> --> VAR <ID_LIST> COLON <TYPE_ID> <OPTIONAL_INIT> SEMI) = [VAR]

FIRST(<OPTIONAL_INIT> --> NULL) = [NULL]
FIRST(<OPTIONAL_INIT> --> ASSIGN <CONST>) = [ASSIGN]

FIRST(<STAT_IF_CLAUSE_2> --> ENDIF SEMI) = [ENDIF]
FIRST(<STAT_IF_CLAUSE_2> --> ELSE <STAT_SEQ> ENDIF SEMI) = [ELSE]

FIRST(<TYPE_DECLARATION_LIST> --> NULL) = [NULL]
FIRST(<TYPE_DECLARATION_LIST> --> <TYPE_DECLARATION> <TYPE_DECLARATION_LIST>) = [TYPE]

FIRST(<BOOL_EXPR_TAIL> --> <BOOL_OP> <ADD_SUB_EXPR> <BOOL_EXPR_TAIL>) = [LESSER, GREATEREQ, EQ, GREATER, LESSEREQ, NEQ]
FIRST(<BOOL_EXPR_TAIL> --> NULL) = [NULL]

